{{ if not .Values.SkipSecretCreation }}
{{ if .Values.UseCertManager }}
{{ if not .Values.certManagerIssuer.skipCreation }}
apiVersion: cert-manager.io/v1
kind: {{ .Values.certManagerIssuer.kind }}
metadata:
  name: {{ .Values.certManagerIssuer.name }}
  namespace: {{ .Release.Namespace }}
spec:
  selfSigned: {}
---
{{ end }}
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: portieris-certs
  namespace: {{ .Release.Namespace }}
spec:
  dnsNames:
    - portieris.{{ .Release.Namespace }}.svc
  secretName: portieris-certs
  issuerRef:
    kind: {{ .Values.certManagerIssuer.kind }}
    name: {{ .Values.certManagerIssuer.name }}
{{ else }}
apiVersion: v1
kind: Secret
metadata:
  name: portieris-certs
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  {{- if .Values.UseGeneratedCerts.enabled }}
  tls.crt: {{ required "A valid .Values.UseGeneratedCerts.tlsCert entry required!" .Values.UseGeneratedCerts.tlsCert| b64enc | quote }}
  tls.key: {{ required "A valid .Values.UseGeneratedCerts.tlsKey entry required!" .Values.UseGeneratedCerts.tlsKey | b64enc | quote }}
  {{ else }}
  tls.crt: {{ .Files.Get "certs/tls.crt" | b64enc }}
  tls.key: {{ .Files.Get "certs/tls.key" | b64enc }}
  {{- end }}
{{ end }}
{{ end }}
